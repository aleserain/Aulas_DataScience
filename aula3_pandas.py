# -*- coding: utf-8 -*-
"""Aula3_Pandas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18BqZet-AFJrs4t5fUULb8hmdP0KAt3ML
"""

import pandas as pd
import matplotlib.pyplot as plt #para customizar os graficos
plt.style.use("seaborn") #estilo que vai usar

df = pd.read_excel("/content/AdventureWorks.xlsx")

df.head()

df.shape #quantidade linhas e colunas

df.dtypes

#Qual a receita total?
df["Valor venda"].sum()

#Custo total
df["Custo"] = df["Custo Unitário"].mul(df["Quantidade"]) #primeiro criar a coluna de custo

df.head()

#Custo total?
round(df["Custo"].sum(), 2)

#Com a receita e custo total, da pra achar o lucro total = receita - custo
df["Lucro"] = df["Valor Venda"] - df["Custo"]

df.head(1)

#Lucro total
round(df["Lucro"].sum(), 2)

#total de dias para enviar o produto - coluna
df["Tempo envio"] = df["Data Envio"] - df["Data Venda"]

df.head(1)

#extrair os dias - média do tempo de envio para cada marca
df["Tempo envio"] = (df["Data Envio"] - df["Data Venda"]).dt.days

df.head(1)

#ver o tipo da coluna pra ver se da pra usar pra conseguir fazer a média. ver se ambos sao dias
df["Tempo envio"].dtype

#média do tempo de envio por marca portanto
df.groupby("Marca")["Tempo envio"].mean()

df.isnull().sum() #ver se colunas e dados faltantes pra prosseguir com analise

#Agrupar por ano e marca
df.groupby([df["Data Venda"].dt.year, "Marca"])["Lucro"].sum()

pd.options.display.float_format = "{:20,.2f}".format #para tirar a notaçåo cientifica dos numeros

df.groupby([df["Data Venda"].dt.year, "Marca"])["Lucro"].sum()

#armazenar data frame ano marca e lucro em ordem:
lucro_ano = df.groupby([df["Data Venda"].dt.year, "Marca"])["Lucro"].sum().reset_index() #pra resetar o index e trazer em formato colunar
lucro_ano

#Ver o total de produtos vendidos
df.groupby("Produto")["Quantidade"].sum().sort_values(ascending=False) #maior pro menor

#Grafico total de produtos vendidos
df.groupby("Produto")["Quantidade"].sum().sort_values(ascending=True).plot.barh(title="Total produtos vendidos")
plt.xlabel("Total")
plt.ylabel("Produto");

df.groupby(df["Data Venda"].dt.year)["Lucro"].sum().plot.bar(title = "Lucro x Ano")
plt.xlabel("Ano")
plt.ylabel("Receita");

#Selecionar apenas as vendas do ano 2009
df_2009 = df[df["Data Venda"].dt.year == 2009]

df_2009.head()

df_2009.groupby(df["Data Venda"].dt.month)["Lucro"].sum().plot(title = "Lucro x Mes")
plt.xlabel("Mes")
plt.ylabel("Lucro");

df_2009.groupby("Marca")["Lucro"].sum().plot.bar(title = "Lucro x Marca")
plt.xlabel("Marca")
plt.ylabel("Lucro")
plt.xticks(rotation= "horizontal"); #notaçao horizontal embaixo

df_2009.groupby("Classe")["Lucro"].sum().plot.bar(title = "Lucro x Classe")
plt.xlabel("Classe")
plt.ylabel("Lucro")
plt.xticks(rotation= "horizontal");

df["Tempo envio"].describe()

#Grafico de boxplot
plt.boxplot(df["Tempo envio"]);

#Histograma
plt.hist(df["Tempo envio"]);

#Tempo minimo de envio
df["Tempo envio"].min()

#Tempo maximo de envio
df["Tempo envio"].max()

#Identificando o outlier
df[df["Tempo envio"] == 20]

df.to_csv("df_vendas_novo.csv", index=False) #para salvar a base